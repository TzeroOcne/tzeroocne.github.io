{"version":3,"sources":["components/editor/Toolbar.js","components/editor/Child.js","components/editor/Canvas.js","components/editor/Photo.js","components/editor/Editor.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["ColorPicker","hueSelectRef","element","hueSelector","clickTest","event","console","log","hueBarStyle","position","left","transform","width","this","props","height","background","id","style","ref","top","borderRadius","boxShadow","borderWidth","borderStyle","cursor","onMouseDown","Component","PhotoToolbar","buttonStyle","padding","display","className","Button","onClick","addCircle","icon","faCircle","addText","UniversalEditor","type","name","value","x","onChange","callback","y","TextEditor","alignItems","fontSize","align","text","MyCanvas","state","canvasWidth","canvasHeight","layers","layerSelected","selectedLayer","undefined","selectedChild","childEditor","insertedColor","loadingFonts","Text","layerCount","dummyChild","addChild","fill","Circle","fontFamily","changeSize","bind","buttonClick","addLayer","selectLayer","selectChild","editChild","loadFont","fonts","idx","length","setState","FontFaceObserver","load","then","catch","err","concat","layer","MyLayer","child","childCounter","renderer","push","key","target","layerKey","parseInt","filter","childName","numbers","item","map","backgroundColor","border","changeEvent","changeCirc","PhotoEditor","Editor","match","path","url","component","withRouter","front","src","logo","alt","href","rel","App","Helmet","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.c86e4470.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCircle} from '@fortawesome/free-regular-svg-icons';\n\nimport './Toolbar.css'\n\nexport class ColorPicker extends Component {\n\n    hueSelectRef = (element) => {\n        this.hueSelector = element;\n    }\n\n    clickTest = (event) => {\n        console.log(this.hueSelector);\n    }\n\n    render() {\n        const hueBarStyle = {\n            position : 'relative',\n            left : '50%',\n            transform : 'translateX(-50%)',\n            width : this.props.width,\n            height : '15px',\n            background : 'linear-gradient(to right, red,#ffff00,green,#00ffff,blue,#ff00ff,red)'\n        }\n\n        const hueSelectorStyle = {\n            position : 'relative',\n            top : '50%',\n            transform : 'translate(-50%, -50%)',\n            width : '10px',\n            height : '10px',\n            borderRadius : '50%',\n            boxShadow : '0 0 0 3pt black',\n            borderWidth : '1px',\n            borderStyle : 'solid',\n            cursor : 'grab'\n        }\n\n        return (\n            <div id='color-picker-container'>\n                <div id='hue-bar' style={hueBarStyle}>\n                    <div ref={this.hueSelectRef} id='hue-selector' style={hueSelectorStyle} onMouseDown={this.clickTest}>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class PhotoToolbar extends Component {\n    render() {\n\n        const buttonStyle = {\n            padding : '0px',\n            width : '100%',\n            height : '100%'\n        }\n\n        const flexBoxStyle = {\n            display : 'flex'\n        }\n\n        return (\n            <div style={flexBoxStyle}>\n                <div className='toolBarButton' >\n                <Button style={buttonStyle} onClick={this.props.addCircle} ><FontAwesomeIcon icon={faCircle} /></Button>\n                </div>\n                <div className='toolBarButton' >\n                <Button style={buttonStyle} onClick={this.props.addText} >T</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, {Component} from 'react';\n\nexport class UniversalEditor extends Component {\n    render() {\n        return (\n            <div>\n                <div>\n                <label>X : &nbsp;</label>\n                <input style={{ width : '70%' }} type='number' name='x'\n                    value={this.props.x || '0'}\n                    onChange={this.props.callback} />\n                </div>\n                <div>\n                <label>Y : &nbsp;</label>\n                <input style={{ width : '70%' }} type='number' name='y'\n                    value={this.props.y || '0'}\n                    onChange={this.props.callback} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class TextEditor extends Component {\n    render() {\n        const flexChild = {\n            display : 'inline-flex',\n            alignItems : 'flex-start'\n        }\n\n        return (\n            <div style={flexChild}>\n                <label>Width : &nbsp;</label>\n                <input type='number' name='width' value={this.props.width || 0} onChange={this.props.callback} />\n                &nbsp;\n                <label>Font Size : &nbsp;</label>\n                <input type='number' name='fontSize' value={this.props.fontSize || 0} onChange={this.props.callback} />\n                &nbsp;\n                <label>Align : &nbsp;</label>\n                <select name='align' id='editor-text-align' value={this.props.align} onChange={this.props.callback}>\n                    <option value='left'>Left</option>\n                    <option value='right'>Right</option>\n                    <option value='center'>Center</option>\n                    <option value='justify'>Justify</option>\n                </select>\n                &nbsp;\n                <label>Text : &nbsp;</label>\n                <textarea name='text' value={this.props.text} onChange={this.props.callback} />\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport FontFaceObserver from 'fontfaceobserver';\nimport {Stage, Text, Layer, Circle} from 'react-konva';\nimport Button from 'react-bootstrap/Button';\n// import './Canvas.css';\n\nimport {\n    PhotoToolbar, ColorPicker\n} from './Toolbar';\n\nimport {\n    TextEditor, UniversalEditor\n} from './Child'\n\nexport default class MyCanvas extends Component {\n    state = {\n        canvasWidth : 1000,\n        canvasHeight : 1000,\n        layers : [\n        ],\n        layerSelected : -1,\n        selectedLayer : undefined,\n        selectedChild : undefined,\n        childEditor : undefined,\n        insertedColor : 'red',\n        loadingFonts : true\n    }\n\n    childEditor = {\n        Text : TextEditor\n    }\n\n    layerCount = 0;\n\n    dummyChild = {\n        props : {\n            x : 0,\n            y : 0\n        }\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.changeSize = this.changeSize.bind(this);\n        this.buttonClick = this.buttonClick.bind(this);\n        this.addLayer = this.addLayer.bind(this);\n\n        this.selectLayer = this.selectLayer.bind(this);\n        this.selectChild = this.selectChild.bind(this);\n\n        this.addChild = this.addChild.bind(this);\n        this.editChild = this.editChild.bind(this);\n    }\n\n    componentDidMount() {\n        console.log('Component Mount');\n\n        let FontObserver = [\n            'Libre Franklin'\n        ]\n\n        function loadFont (fonts, idx) {\n            if (idx == fonts.length) {\n                console.log('Fonts Loaded');\n                this.setState({ loadingFonts : false });\n            }\n            else {\n                let font = new FontFaceObserver(fonts[idx]);\n\n                font.load().then(() => {\n                    console.log(`Loaded ${fonts[idx]}`);\n                    loadFont(fonts, idx + 1);\n                }).catch((err) => {\n                    console.log(`Error loading font ${fonts[idx]}`);\n                    console.log(err);\n                })\n            }\n        }\n\n        loadFont = loadFont.bind(this);\n\n        loadFont(FontObserver, 0);\n\n    }\n\n    addLayer (event) {\n        this.setState({\n            'layers' : this.state.layers.concat({\n                layer : new MyLayer(),\n                name : `Layer ${this.layerCount}`,\n                idx : this.layerCount,\n                child : [],\n                childCounter : {}\n            })\n        })\n\n        this.layerCount++;\n    }\n\n    addChild(props, renderer) {\n\n        console.log(this.state.layers);\n        console.log(this.state.layerSelected);\n        let layer = this.state.selectedLayer;\n\n        const childCounter = layer.childCounter[renderer] || 0;\n        layer.child.push({\n            props,\n            renderer,\n            key : childCounter,\n            name : `${renderer} ${childCounter}`\n        });\n        layer.childCounter[renderer] = childCounter + 1;\n\n        this.setState({\n            selectedLayer : layer\n        })\n    }\n\n    editChild (event) {\n        if (this.state.selectedChild) {\n            let selectedChild = this.state.selectedChild;\n            selectedChild.props[event.target.name] = event.target.value;\n\n            this.setState({\n                selectedChild\n            })\n        }\n    }\n\n    selectLayer (event) {\n        const layerKey = parseInt(event.target.name);\n\n        this.setState({\n            layerSelected : layerKey,\n            selectedLayer : this.state.layers.filter((layer) => layer.idx == layerKey)[0]\n        })\n    }\n\n    selectChild (event) {\n        console.log('Select Child');\n        let childName = event.target.name;\n        let selectedChild = this.state.selectedLayer.child.filter((child) => child.name == childName)[0];\n        console.log(selectedChild.renderer);\n\n        this.setState({\n            selectedChild,\n            childEditor : this.childEditor[selectedChild.renderer]\n        })\n    }\n\n    buttonClick(event) {\n        this.setState({\n            'numbers' : this.state.numbers.concat([this.state.numbers.length])\n        })\n    }\n\n    changeSize(event) {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    render() {\n        const flexChild = {\n            display : 'inline-flex',\n            alignItems : 'flex-start'\n        }\n\n        const greenBg = {\n            backgroundColor : 'green',\n            border : 'none'\n        }\n\n        const { loadingFonts, layerSelected } = this.state;\n        const selectedLayer = (layerSelected != -1) ?\n            this.state.layers.filter((item) => item.idx == layerSelected)[0] : {\n            child : []\n        };\n\n        const selectedChild = this.state.selectedChild || this.dummyChild;\n\n        return(\n            <div className='row'>\n            <div className='col-12' style={{ fontFamily : 'Libre Franklin, sans-serif' }}>\n            Text\n            </div>\n            <div className='col-12'>\n                <div id='canvas-controller'>\n                    <label>Width : &nbsp;</label>\n                    <input type='number' name='canvasWidth' value={this.state.canvasWidth} onChange={this.changeSize}/>\n                    &nbsp;\n                    <label>Height : &nbsp;</label>\n                    <input type='number' name='canvasHeight' value={this.state.canvasHeight} onChange={this.changeSize}/>\n                </div>\n            </div>\n            <div className='col-12'>\n                <div id='child-editor'>\n                {\n                    (this.state.childEditor) ? <this.state.childEditor callback={this.editChild} {...selectedChild.props} /> : null\n                }\n                </div>\n                &nbsp;\n            </div>\n            <div className='col-4'>\n                <div className='row'>\n                <div className='col-3'>\n                    <div style={{ display : (this.state.selectedLayer) ? 'unset' : 'none' }}>\n                    <PhotoToolbar\n                        addCircle={this.addCircle}\n                        addText={this.addText}\n                    />\n                    </div>\n                </div>\n                <div className='col-3' style={{ padding : '0px' }}>\n                {\n                    selectedLayer.child.map((child, idx) => \n                        <div key={idx}><Button onClick={this.selectChild} name={child.name} style={{ width : '100%' }} >{child.name}</Button></div>\n                    )\n                }\n                </div>\n                <div className='col-6'>\n                    <div>\n                    {\n                        this.state.layers.map((item) => \n                            <Button key={item.idx} name={item.idx} style={{ width : '100%' }} onClick={this.selectLayer}>{item.name}</Button>\n                        )\n                    }\n                    </div><br/>\n                    <Button style={greenBg} onClick={this.addLayer}>Add Layer</Button>\n                </div>\n                <div style={{ top : '10px' }} className='col-12'>\n                    <UniversalEditor {...selectedChild.props} callback={this.editChild} />\n                </div>\n                <div style={{ top : '20px' }} className='col-12'>\n                    <ColorPicker width='200px' />\n                </div>\n                </div>\n            </div>\n            <div className='col-8'>\n                <div id='my-canvas'>\n                    <Stage width={this.state.canvasWidth} height={this.state.canvasHeight}>\n                        <Layer>\n                        </Layer>\n                        {\n                            this.state.layers.map((item) => \n                                <MyLayer child={item.child} key={item.idx} />\n                            )\n                        }\n                    </Stage>\n                </div>\n            </div>\n            </div>\n        )\n    }\n\n    addCircle = (event) => {\n        const defaultCircle = {\n            fill : 'red',\n            width : 50,\n            height : 50\n        }\n\n        this.addChild(defaultCircle, Circle);\n    }\n\n    addText = (event) => {\n        const defaultText = {\n            fontSize : 16,\n            width : 500,\n            fontFamily : 'Libre Franklin',\n            text : 'Default Text',\n            align : 'left'\n        }\n        \n        this.addChild(defaultText, Text);\n    }\n}\n//                        <Text fontSize={100} fontFamily={(loadingFonts) ? undefined : 'Libre Franklin'} text='other text' y={200} />\n//                        <Text fontSize={100} fontFamily='Calibri' text='initial text' />\n                //        <div style={{ color : 'red' }} >{item.name}</div>\n                // <Button onClick={this.buttonClick}>Change</Button>\n\nclass MyLayer extends Component {\n    state = {\n        fill : 'red',\n        child : []\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.changeEvent = this.changeEvent.bind(this);\n        this.changeCirc = this.changeCirc.bind(this);\n        this.addChild = this.addChild.bind(this);\n    }\n\n    addChild(props, renderer) {\n        console.log('Child added');\n        this.setState({\n            child : this.state.child.concat([{\n                props : props,\n                renderer : renderer\n            }])\n        });\n    }\n\n    changeCirc() {\n        this.setState({\n            'fill' : 'black'\n        })\n    }\n\n    changeEvent(event) {\n\n    }\n\n    render() {\n\n        return (\n            <Layer>\n            {\n                this.props.child.map((child, idx) => \n                    <child.renderer key={idx} {...child.props} />\n                )\n            }\n            </Layer>\n        )\n    }\n}\n\nfunction MyText(props) {\n    return (\n        props.loadingFonts ?\n        <Text text={props.text} fontSize={props.fontSize} /> :\n        <Text text={props.text} fontSize={props.fontSize} fontFamily={props.fontFamily} />\n    )\n}\n\nfunction MyCircle(props) {\n    return (\n        <div/>\n    )\n}\n","import React, {Component} from 'react';\nimport MyCanvas from './Canvas'\n\nexport default class PhotoEditor extends Component {\n    render() {\n        return (\n            <div id='editor' className='row'>\n                <div className='col-12'>Photo Editor</div>\n                <div className='col-12'>\n                    Editor Place<br/>\n                    <MyCanvas />\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, useRouteMatch, Route, withRouter} from 'react-router-dom';\nimport PhotoEditor from './Photo';\n\nclass Editor extends Component {\n\n    render() {\n        const { path, url } = this.props.match;\n\n        return (\n            <Router>\n                <div>\n                    Editor Choice\n                </div>\n                <Switch>\n                    <Route path={`${path}/photo`} component={PhotoEditor} />\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default withRouter(Editor);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n      BrowserRouter as Router,\n      Switch,\n      Route,\n      Link\n    \n} from \"react-router-dom\";\nimport { Helmet } from 'react-helmet';\nimport Editor from './components/editor/Editor';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Helmet>\n          <link href=\"https://fonts.googleapis.com/css2?family=Libre+Franklin:wght@800&display=swap\" rel=\"stylesheet\" />\n          <title>Front page</title>\n        </Helmet>\n        <Switch>\n          <Route path=\"/editor\" component={Editor} />\n          <Route path=\"/\" component={front} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction front() {\n    return (\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}